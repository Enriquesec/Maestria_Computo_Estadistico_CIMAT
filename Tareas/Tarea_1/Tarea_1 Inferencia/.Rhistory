f_x <- rep(1/n,n)
F_x <- cumsum(f_x)
plot(x, f_x, main="PDF Unifrome Discreta", type="h")
plot(F_x,  main="CDF Unifrome Discreta", verticals=TRUE, do.points=FALSE)
}
grafica_pdf_and_cdf_uniforme(10)
?plot.ecdf()
grafica_pdf_and_cdf_uniforme <- function(n){
x <- seq(1:n)
f_x <- rep(1/n,n)
F_x <- cumsum(f_x)
plot(x, f_x, main="PDF Unifrome Discreta", type="h")
plot(F_x,  main="CDF Unifrome Discreta", verticals = TRUE, col.points = "blue",
col.hor = "red", col.vert = "bisque")
}
grafica_pdf_and_cdf_uniforme(10)
plot.ecdf()
plot.ecdf
ecdf()
ecdf
grafica_pdf_and_cdf_uniforme <- function(n){
x <- seq(1:n)
f_x <- rep(1/n,n)
F_x <- cumsum(f_x)
plot(x, f_x, main="PDF Unifrome Discreta", type="h")
plot.ecdf(x,  main="CDF Unifrome Discreta")
}
grafica_pdf_and_cdf_uniforme(10)
sample(10,100000)
sample(1000,10)
sample(10,10, replace = TRUE)
sample(10,104, replace = TRUE)
sample(10,100000, replace = TRUE)
# c) Simulación
set.seed(13)
muestra <- sample(10,10000, replace = TRUE)
table(muestra)
mean(muestra)
var(muestra)
hist(muestra)
plot(table(muestra))
experimento_moneda <- sample(2,10)
experimento_moneda <- sample(2, 10, replace=TRUE)
sample(2,10, replace = TRUE)
sample(2,10, replace = TRUE)
sample(2,10, replace = TRUE)
sample(2,10, replace = TRUE)
sample(2,10, replace = TRUE)
sample(2,10, replace = TRUE)
sample(2,10, replace = TRUE)
sample(c(0,1),10, replace = TRUE)
sample(c(0,1),10, replace = TRUE)
sample(c(0,1),10, replace = TRUE)
sample(c(0,1),10, replace = TRUE)
sample(c(0,1),10, replace = TRUE)
sample(c(0,1),10, replace = TRUE)
sample(c(0,1),10, replace = TRUE)
sample(c(0,1),10, replace = TRUE)
sample(c(0,1),10, replace = TRUE)
rep(sample(c(0,1),10, replace = TRUE),)
rep(sample(c(0,1),10, replace = TRUE),2)
sample(c(0,1),10, replace = TRUE)
0.99**10
0.99*9
0.99**9
0.9135172*0.01
(0.99**8)*(0.01**2)
qbinom(0.01,2)
qbinom(prob = 0.01,size = 10,2)
qbinom(prob = 0.01,size = 10)
qbinom(p=2,prob = 0.01,size = 10)
qbinom(p=0.2,prob = 0.01,size = 10)
pbinom(prob = 0.01,size = 10)
pbinom(q=2prob = 0.01,size = 10)
pbinom(q=2,prob = 0.01,size = 10)
pbinom(q=0,prob = 0.01,size = 10)
0.01**10
pbinom(q=1,prob = 0.01,size = 10)
10(0.9135172)(0.01)
10*(0.9135172)*(0.01)
pbinom(q=3,prob = 0.01,size = 10)
pbinom(q=,prob = 0.01,size = 10)
pbinom(q=4,prob = 0.01,size = 10)
pbinom(q=5,prob = 0.01,size = 10)
pbinom()
?pbinom
dbinom(x=0, size=10, prob = 0.01)
dbinom(x=2, size=10, prob = 0.01)
dbinom(x=1, size=10, prob = 0.01)
10*(0.9135172)*(0.01)
dbinom(x=3, size=10, prob = 0.01)
dbinom(x=2, size=10, prob = 0.01)
dbinom(x=2, size=10, prob = 0.01)+dbinom(x=1, size=10, prob = 0.01)+dbinom(x=0, size=10, prob = 0.01)
qbinom(x=2, size=10, prob = 0.01)
qbinom(q=2, size=10, prob = 0.01)
qbinom(2, size=10, prob = 0.01)
qbinom(p=2, size=10, prob = 0.01)
pbinom(q=2, size=10, prob = 0.01)
pbinom(q=2, size=10, prob = 0.01)
pbinom(q=2, size=10, prob = 0.05)
pbinom(q=2, size=10, prob = 0.10)
pbinom(q=2, size=10, prob = 0.20)
pbinom(q=2, size=10, prob = 0.25)
pbinom(q=seq(0,10), size=10, prob = 0.25)
pbinom(q=seq(0,10), size=10, prob = 0.25)
# Ejercicio 1.
pbinom(q=1, size=12, prob = 0.1)
# Ejercicio 1.
pbinom(q=2, size=12, prob = 0.1)
1-0.88913
pbinom(q=1, size=6, prob=0.11087)
6*0.11087
sqrt(6*0.11087*(1-0.11087))
0.66522+0.769069
0.66522+2*(0.769069)
sos anteriores para una moneda desequilibrada que tiene probabilidad
5. Para el siguiente ejercicio también necesitamos R.
\begin{itemize}
\item[a)] Usando la función sample, simule 10 lanzamientos de una moneda equilibrada y cuente el número de águilas que obtiene. Repita este proceso $10^6$ veces y muestre sus primeros 3 resultados. Grafique las frecuencias del número de águilas obtenidas en los $10^6$ experimentos. También grafique las proporciones del número de águilas obtenidas.
\item[b)] Usando la función $dbinom$ grafique la función de masa de una distribución B(10, 0.5) el número de águilas que obtiene. Repita este proceso 10 6 veces y muestre sus primeros 3 resultados. Grafique las frecuencias del número de águilas obtenidas en los 10 6
experiementos. También grafique las proporciones del número de águilas obtenidas.
\item[b)] Usando la función dbinom grafique la función de masa de una distribución B(10, 0.5) sobre la gráfica de las proporciones que hizo en el inciso anterior.
\item[c)] Repita los dos incisos anteriores para una moneda desequilibrada que tiene probabilidad
p = 0.3 de obtener un águila cuando se lanza. ¿Qué observa?
\end{itemize}
grafica_pdf_and_cdf_uniforme <- function(n){
x <- seq(1:n)
f_x <- rep(1/n,n)
F_x <- cumsum(f_x)
plot(x, f_x, main="PDF Unifrome Discreta", type="h")
plot.ecdf(x,  main="CDF Unifrome Discreta")
}
grafica_pdf_and_cdf_uniforme(10)
?pairs()
sample(urna, 20)
urna <- c(rep(1,46), rep(0,49))
sample(urna, 20)
urna <- c(rep(1,46), rep(0,49))
sample(urna, 20)
urna <- c(rep(1,46), rep(0,49))
sample(urna, 20)
urna <- c(rep(1,46), rep(0,49))
sample(urna, 20)
?sample
sample(urna, 47)
sum(sample(urna, 47))
sum(sample(urna, 47))
sum(sample(urna, 47))
sum(sample(urna, 47))
sum(sample(urna, 47))
sum(sample(urna, 47))
sum(sample(urna, 47))
sum(sample(urna, 47))
sum(sample(urna, 47))
sum(sample(urna, 47))
sum(sample(urna, 47))
sum(sample(urna, 47))
sum(sample(urna, 47))
sum(sample(urna, 47))
sum(sample(urna, 80))
sum(sample(urna, 90))
sum(sample(urna, 97))
sum(sample(urna, 96))
sum(sample(urna, 95))
sum(sample(urna, 95))
sum(sample(urna, 95))
sum(sample(urna, 95))
sum(sample(urna, 95))
sum(sample(urna, 95))
sum(sample(urna, 95))
sum(sample(urna, 95))
sum(sample(urna, 95))
sum(sample(urna, 95))
sum(sample(urna, 95))
?resample
}
for(i in 1:10**6) {
print(i)
}
frecuencias_grises <- c()
for(i in 1:10**6) {
frecuencias_grises <-sum(sample(urna, 20))
}
lanzamientos <- c(0,1)
sample(lanzamientos, 10, replace = TRUE)
simulacion_monedas <- c()
for(i in 1:10**6) {
simulacion_monedas[i] <-sum(sample(lanzamientos, 10, replace = TRUE))
}
simulacion_monedas[:3]
simulacion_monedas
simulacion_monedas[,3]
simulacion_monedas[3]
simulacion_monedas[1:3]
simulacion_monedas[0:3]
plot(table(simulacion_monedas))
simulacion_monedas
10-simulacion_monedas
simulacion_monedas/10
proporcion_simulacion <- simulacion_monedas/10
plot(table(proporcion_simulacion))
dbinom(x=seq(0:10), size = 10,prob = 0.5)
plot(dbinom(x=seq(0:10), size = 10,prob = 0.5))
plot(dbinom(x=seq(0:11), size = 10,prob = 0.5))
plot(dbinom(x=seq(0:10), size = 10,prob = 0.5))
plot(dbinom(x=seq(0:10), size = 10,prob = 0.5))
plot(dbinom(x=seq(0:9), size = 10,prob = 0.5))
dbinom(x=seq(0:9), size = 10,prob = 0.5)
plot(dbinom(x=seq(0:9), size = 10,prob = 0.5))
plot(table(proporcion_simulacion))
lines(dbinom(x=seq(0:9), size = 10,prob = 0.5))
plot(table(proporcion_simulacion))
plot(dbinom(x=seq(0:9), size = 10,prob = 0.5))
table(simulacion_monedas)
table(simulacion_monedas)/sum(table(simulacion_monedas))
plot(table(simulacion_monedas)/sum(table(simulacion_monedas)))
plot(table(simulacion_monedas)/sum(table(simulacion_monedas)))
par(new=FAlSE)
plot(table(simulacion_monedas)/sum(table(simulacion_monedas)))
par(new=TRUE)
plot(dbinom(x=seq(0:9), size = 10,prob = 0.5))
plot(table(simulacion_monedas)/10**6
par(new=TRUE)
plot(table(simulacion_monedas)/10**6)
par(new=TRUE)
plot(dbinom(x=seq(0:9), size = 10,prob = 0.5))
plot(table(simulacion_monedas)/10**6)
par(new=TRUE)
plot(dbinom(x=seq(0:9), size = 10,prob = 0.5),xlab = "", ylab = "", )
plot(table(simulacion_monedas)/10**6)
plot(dbinom(x=seq(0:9), size = 10,prob = 0.5),xlab = "", ylab = "", )
plot(dbinom(x=seq(0:9), size = 10,prob = 0.5),xlab = "", ylab = "",xlim = c(0,10))
plot(table(simulacion_monedas)/10**6)
par(new=TRUE)
plot(dbinom(x=seq(0:9), size = 10,prob = 0.5),xlab = "", ylab = "",xlim = c(0,10))
lanzamientos <- c(seq(0,6),seq(0,3))
lanzamientos_moneda_desequilibrada <- c(seq(0,6),seq(0,3))
sum(sample(lanzamientos, 10, replace = TRUE))
sum(sample(lanzamientos_moneda_desequilibrada, 10, replace = TRUE))
lanzamientos_moneda_desequilibrada <- c(seq(0,6),seq(1,3))
sum(sample(lanzamientos_moneda_desequilibrada, 10, replace = TRUE))
lanzamientos_moneda_desequilibrada
lanzamientos_moneda_desequilibrada <- c(req(0,6),req(1,3))
lanzamientos_moneda_desequilibrada <- c(req(0,6),req(1,3))
lanzamientos_moneda_desequilibrada <- c(rep(0,6),rep(1,3))
sum(sample(lanzamientos_moneda_desequilibrada, 10, replace = TRUE))
lanzamientos_moneda_desequilibrada <- c(rep(0,6),rep(1,3))
sum(sample(lanzamientos_moneda_desequilibrada, 10, replace = TRUE))
3/9
3/10
lanzamientos_moneda_desequilibrada <- c(rep(0,7),rep(1,3))
sum(sample(lanzamientos_moneda_desequilibrada, 10, replace = TRUE))
lanzamientos_moneda_desequilibrada <- c(rep(0,7),rep(1,3))
sum(sample(lanzamientos_moneda_desequilibrada, 10, replace = TRUE))
lanzamientos_moneda_desequilibrada <- c(rep(0,7),rep(1,3))
sum(sample(lanzamientos_moneda_desequilibrada, 10, replace = TRUE))
lanzamientos_moneda_desequilibrada <- c(rep(0,7),rep(1,3))
sum(sample(lanzamientos_moneda_desequilibrada, 10, replace = TRUE))
lanzamientos_moneda_desequilibrada <- c(rep(0,7),rep(1,3))
sum(sample(lanzamientos_moneda_desequilibrada, 10, replace = TRUE))
lanzamientos_moneda_desequilibrada <- c(rep(0,7),rep(1,3))
sum(sample(lanzamientos_moneda_desequilibrada, 10, replace = TRUE))
lanzamientos_moneda_desequilibrada <- c(rep(0,7),rep(1,3))
sum(sample(lanzamientos_moneda_desequilibrada, 10, replace = TRUE))
lanzamientos_moneda_desequilibrada <- c(rep(0,7),rep(1,3))
sum(sample(lanzamientos_moneda_desequilibrada, 10, replace = TRUE))
lanzamientos_moneda_desequilibrada <- c(rep(0,7),rep(1,3))
sum(sample(lanzamientos_moneda_desequilibrada, 10, replace = TRUE))
lanzamientos_moneda_desequilibrada <- c(rep(0,7),rep(1,3))
sum(sample(lanzamientos_moneda_desequilibrada, 10, replace = TRUE))
lanzamientos_moneda_desequilibrada <- c(rep(0,7),rep(1,3))
sum(sample(lanzamientos_moneda_desequilibrada, 10, replace = TRUE))
lanzamientos_moneda_desequilibrada <- c(rep(0,7),rep(1,3))
sum(sample(lanzamientos_moneda_desequilibrada, 10, replace = TRUE))
lanzamientos_moneda_desequilibrada <- c(rep(0,7),rep(1,3))
sum(sample(lanzamientos_moneda_desequilibrada, 10, replace = TRUE))
lanzamientos_moneda_desequilibrada <- c(rep(0,7),rep(1,3))
sum(sample(lanzamientos_moneda_desequilibrada, 10, replace = TRUE))
simulacion_monedas_desequilibrada <- c()
for(i in 1:10**6) {
simulacion_monedas[i] <-sum(sample(lanzamientos_moneda_desequilibrada, 10, replace = TRUE))
4}
simulacion_monedas[1:3]
frecuencias_moneda_desequilibrada <- table(simulacion_monedas_desequilibrada)
plot(frecuencias_moneda_desequilibrada)
simulacion_monedas_desequilibrada <- c()
for(i in 1:10**6) {
simulacion_monedas_desequilibrada[i] <-sum(sample(lanzamientos_moneda_desequilibrada, 10, replace = TRUE))
4}
simulacion_monedas[1:3]
frecuencias_moneda_desequilibrada <- table(simulacion_monedas_desequilibrada)
plot(frecuencias_moneda_desequilibrada)
dbinom(x=seq(0:9), size = 10,prob = 0.5)
seq(0:9)
seq(-1:9)
seq(0:9)
seq(0,10,1)
plot(frecuencias_moneda/10**6)
plot(frecuencias_moneda/10**6)
lanzamientos <- c(0,1)
sum(sample(lanzamientos, 10, replace = TRUE))
simulacion_monedas <- c()
for(i in 1:10**6) {
simulacion_monedas[i] <-sum(sample(lanzamientos, 10, replace = TRUE))
}
simulacion_monedas[1:3]
frecuencias_moneda <- table(simulacion_monedas)
plot(frecuencias_moneda)
plot(frecuencias_moneda/10**6)
plot(frecuencias_moneda/10**6)
par(new=TRUE)
plot(dbinom(x=seq(0,10,1), size = 10,prob = 0.5),xlab = "", ylab = "",xlim = c(0,10))
plot(frecuencias_moneda/10**6)
par(new=TRUE)
plot(dbinom(x=seq(0,10,1), size = 10,prob = 0.5),xlab = "", ylab = "",xlim = c(0,11))
plot(frecuencias_moneda/10**6)
par(new=TRUE)
plot(dbinom(x=seq(0,10,1), size = 10,prob = 0.5),xlab = "", ylab = "",xlim = c(-1,10))
plot(frecuencias_moneda/10**6)
par(new=TRUE)
plot(dbinom(x=seq(0,10,1), size = 10,prob = 0.5),xlab = "", ylab = "",xlim = c(1,11))
seq(0,10,1)
plot(dbinom(x=seq(0,10,1), size = 10,prob = 0.5),xlab = "", ylab = "",xlim = c(1,11), )
dbinom(x=seq(0,10,1)
dbinom(x=seq(0,10,1), size = 10,prob = 0.5)
plot(x=seq(0,10,1),dbinom(x=seq(0,10,1), size = 10,prob = 0.5),xlab = "", ylab = "",xlim = c(1,11), )
plot(frecuencias_moneda/10**6)
par(new=TRUE)
plot(x=seq(0,10,1),dbinom(x=seq(0,10,1), size = 10,prob = 0.5),xlab = "", ylab = "",xlim = c(1,11), )
plot(frecuencias_moneda/10**6)
par(new=TRUE)
plot(x=seq(0,10,1),dbinom(x=seq(0,10,1), size = 10,prob = 0.5),xlab = "", ylab = "",)
frecuencias_grises <- c()
for(i in 1:10**6) {
frecuencias_grises[i] <-sum(sample(urna, 20, replace=FALSE))
}
frecuencias_grises
freq_grises <- table(frecuencias_grises)
plot(freq_grises)
frecuencias_grises
proporcion_bolas <- freq_grises/10**6
proporcion_bolas
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
proporcion_bolas
plot(proporcion_bolas)
dhyper(x=seq(1,20,1), m = 46,n = 49,k = 20)
dhyper(x=seq(1,20,1), m = 49,n = 46,k = 20)
proporcion_bolas <- freq_grises/10**6
plot(proporcion_bolas)
par(new=FALSE)
plot(x=seq(0,20,1), y= dhyper(x=seq(1,20,1), m = 49,n = 46,k = 20))
plot(x=seq(0,20,1), y=dhyper(x=seq(1,20,1), m = 49,n = 46,k = 20))
plot(x=seq(0,19,1), y=dhyper(x=seq(1,20,1), m = 49,n = 46,k = 20))
plot(proporcion_bolas)
par(new=FALSE)
plot(x=seq(0,19,1), y=dhyper(x=seq(1,20,1), m = 49,n = 46,k = 20))
proporcion_bolas <- freq_grises/10**6
plot(proporcion_bolas)
par(new=FALSE)
plot(x=seq(0,19,1), y=dhyper(x=seq(1,20,1), m = 49,n = 46,k = 20))
proporcion_bolas <- freq_grises/10**6
plot(proporcion_bolas)
par(new=TRUE)
plot(x=seq(0,19,1), y=dhyper(x=seq(1,20,1), m = 49,n = 46,k = 20))
plot(proporcion_bolas)
par(new=TRUE)
plot(x=seq(0,19,1), y=dhyper(x=seq(1,20,1), m = 46, n=49, k=20))
plot(proporcion_bolas)
par(new=TRUE)
plot(x=seq(0,19,1), y=dhyper(x=seq(0,20,1), m = 46, n=49, k=20))
plot(proporcion_bolas)
par(new=TRUE)
plot(x=seq(0,20,1), y=dhyper(x=seq(0,20,1), m = 46, n=49, k=20))
plot(proporcion_bolas)
par(new=TRUE)
plot(x=seq(0,20,1), y=dhyper(x=seq(0,20,1), m = 46, n=49, k=20), xlab = "", ylab="")
proporcion_bolas <- freq_grises/10**6
plot(proporcion_bolas)
par(new=TRUE)
plot(x=seq(0,18,1), y=dhyper(x=seq(0,19,1), m = 46, n=49, k=20), xlab = "", ylab="")
proporcion_bolas <- freq_grises/10**6
plot(proporcion_bolas)
par(new=TRUE)
plot(x=seq(0,19,1), y=dhyper(x=seq(0,19,1), m = 46, n=49, k=20), xlab = "", ylab="")
proporcion_bolas <- freq_grises/10**6
plot(proporcion_bolas)
par(new=TRUE)
plot(x=seq(0,19,1), y=dhyper(x=seq(0,19,1), m = 46, n=49, k=20), xlab = "", ylab="")
grafica_pdf_and_cdf_uniforme <- function(n){
x <- seq(1:n)
f_x <- rep(1/n,n)
F_x <- cumsum(f_x)
par(mfrow=c(1,2))
plot(x, f_x, main="PDF Unifrome Discreta", type="h")
plot.ecdf(x,  main="CDF Unifrome Discreta")
}
grafica_pdf_and_cdf_uniforme(20)
set.seed(13)
muestra <- sample(10,10000, replace = TRUE)
table(muestra)
mean(muestra)
var(muestra)
plot(table(muestra))
lanzamientos <- c(0,1)
sum(sample(lanzamientos, 10, replace = TRUE))
simulacion_monedas <- c()
for(i in 1:10**6) {
simulacion_monedas[i] <-sum(sample(lanzamientos, 10, replace = TRUE))
}
simulacion_monedas[1:3]
frecuencias_moneda <- table(simulacion_monedas)
plot(frecuencias_moneda)
plot(frecuencias_moneda/10**6)
plot(frecuencias_moneda/10**6)
par(new=TRUE)
plot(x=seq(0,10,1),dbinom(x=seq(0,10,1), size = 10,prob = 0.5),xlab = "", ylab = "",)
lanzamientos_moneda_desequilibrada <- c(rep(0,7),rep(1,3))
sum(sample(lanzamientos_moneda_desequilibrada, 10, replace = TRUE))
simulacion_monedas_desequilibrada <- c()
for(i in 1:10**6) {
simulacion_monedas_desequilibrada[i] <-sum(sample(lanzamientos_moneda_desequilibrada, 10, replace = TRUE))
4}
simulacion_monedas[1:3]
frecuencias_moneda_desequilibrada <- table(simulacion_monedas_desequilibrada)
plot(frecuencias_moneda_desequilibrada)
plot(frecuencias_moneda_desequilibrada/10**6)
plot(frecuencias_moneda_desequilibrada/10**6)
par(new=TRUE)
plot(x=seq(0,10,1), y=dbinom(x=seq(0,10,1), size = 10,prob = 0.3),xlab = "", ylab = "",xlim = c(0,10))
urna <- c(rep(1,46), rep(0,49))
sum(sample(urna, 20, replace=FALSE))
frecuencias_grises <- c()
for(i in 1:10**6) {
frecuencias_grises[i] <-sum(sample(urna, 20, replace=FALSE))
}
freq_grises <- table(frecuencias_grises)
plot(freq_grises)
proporcion_bolas <- freq_grises/10**6
plot(proporcion_bolas)
par(new=TRUE)
plot(x=seq(0,19,1), y=dhyper(x=seq(0,19,1), m = 46, n=49, k=20), xlab = "", ylab="")
proporcion_bolas <- freq_grises/10**6
plot(proporcion_bolas)
par(new=TRUE)
plot(x=seq(0,20,1), y=dhyper(x=seq(0,20,1), m = 46, n=49, k=20), xlab = "", ylab="")
proporcion_bolas
proporcion_bolas <- freq_grises/10**6
plot(proporcion_bolas)
par(new=TRUE)
plot(x=seq(1,19,1), y=dhyper(x=seq(1,19,1), m = 46, n=49, k=20), xlab = "", ylab="")
dhyper(x=seq(1,19,1), m = 46, n=49, k=20)
dhyper(x=seq(0,19,1), m = 46, n=49, k=20)
dhyper(x=seq(0,20,1), m = 46, n=49, k=20)
46+49
dhyper(x=5, m = 46, n=49, k=20)
